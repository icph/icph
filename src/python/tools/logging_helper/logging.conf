[loggers]
keys=root,backend_general,cherrypy.access,cherrypy.error

[handlers]
keys=default_handler,console_handler,file_handler,cherrypy_console,cherrypy_file_handler

[formatters]
keys=backend_general,cherrypy

[logger_root]
; Possible levels in order are DEBUG, INFO, WARNING, ERROR, CRITICAL
; This root logger will effect CherryPy's logging and all other logger without a proper defined name.
level=ERROR
; Set the output target
handlers=default_handler
;handlers=default_handler,file_handler

[logger_backend_general]
; Possible levels in order are DEBUG, INFO, WARNING, ERROR, CRITICAL
level=ERROR
; Set the output target
handlers=default_handler
;handlers=default_handler,file_handler
qualname=backend_general
propagate=0

[logger_cherrypy.access]
; Possible levels in order are DEBUG, INFO, WARNING, ERROR, CRITICAL
; Default is INFO
level=INFO
; Set the output target
handlers=cherrypy_console
qualname=cherrypy.access
propagate=0

[logger_cherrypy.error]
; Possible levels in order are DEBUG, INFO, WARNING, ERROR, CRITICAL
; Default is INFO
level=INFO
; Set the output target
handlers=cherrypy_console
;handlers=cherrypy_console,cherrypy_file_handler
qualname=cherrypy.error
propagate=0

[handler_default_handler]
class=StreamHandler
; Do not need to change the level here. Control the level at logger level.
level=DEBUG
formatter=backend_general
args=(sys.stderr,)

[handler_console_handler]
class=StreamHandler
; Do not need to change the level here. Control the level at logger level.
level=DEBUG
formatter=backend_general
args=(sys.stdout,)

[handler_file_handler]
class=logging.handlers.RotatingFileHandler
; Do not need to change the level here. Control the level at logger level.
level=DEBUG
formatter=backend_general
args=('/tmp/iot-dev-hub.log', 'maxBytes=100000','backupCount=10','encoding=utf8')

[handler_cherrypy_console]
class=logging.StreamHandler
; Do not need to change the level here. Control the level at logger level.
level=DEBUG
formatter=cherrypy
args=(sys.stdout,)

[handler_cherrypy_file_handler]
class=logging.handlers.RotatingFileHandler
; Do not need to change the level here. Control the level at logger level.
level=DEBUG
formatter=cherrypy
args=('/tmp/iot-dev-hub.log', 'maxBytes=100000','backupCount=10','encoding=utf8')

[formatter_backend_general]
format=%(asctime)s - %(levelname)s - %(filename)s:%(lineno)s - %(funcName)5s(): %(message)s
datefmt=

[formatter_cherrypy]
format=%(asctime)s - %(levelname)s - CherryPy: %(message)s
datefmt=


